/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package be.w2.lotto;

import be.w2.lotto.domain.LottoTickets;
import be.w2.lotto.domain.WinningLottoTicket;
import be.w2.lotto.domain.WinningResult;
import be.w2.lotto.dto.InputPurchaseAmountDto;
import be.w2.lotto.dto.LottoTicketsDto;
import be.w2.lotto.dto.WinningResultDto;
import be.w2.lotto.view.InputView;
import be.w2.lotto.view.OutputView;

import static be.w2.lotto.view.ErrorView.throwErrorMessage;
import static be.w2.lotto.view.InputView.inputPurchaseAmount;

public class LottoApplication {

    public static void main(String[] args) {
        InputPurchaseAmountDto inputPurchaseAmountDto = LottoApplication.inputPurchaseAmountDto();
        LottoTickets lottoTickets = inputPurchaseAmountDto.lottoTickets;
        int purchaseAmount = inputPurchaseAmountDto.purchaseAmount;
        LottoTicketsDto lottoTicketsDto = LottoTicketsDto.from(lottoTickets);
        OutputView.outputLottoAmounts(lottoTicketsDto.getLottoTicketAmount());
        OutputView.outputLottoTickets(lottoTicketsDto.lottoTickets);

        WinningLottoTicket winningLottoTicket = inputWinningNumbers();
        WinningResult winningResult = WinningResult.valueOf(lottoTickets, winningLottoTicket, purchaseAmount);
        WinningResultDto winningResultDto = WinningResultDto.from(winningResult);
        OutputView.outputWinningResult(winningResultDto);
    }

    private static InputPurchaseAmountDto inputPurchaseAmountDto() {
        while (true) {
            try {
                int purchaseAmount = inputPurchaseAmount();
                return InputPurchaseAmountDto.of(LottoTickets.valueOf(purchaseAmount), purchaseAmount);
            } catch (IllegalArgumentException e) {
                throwErrorMessage(e);
            }
        }
    }

    private static WinningLottoTicket inputWinningNumbers() {
        while (true) {
            try {
                String winningNumbers = InputView.inputWinningNumbers();
                return WinningLottoTicket.valueOf(winningNumbers);
            } catch (IllegalArgumentException e) {
                throwErrorMessage(e);
            }
        }
    }
}
