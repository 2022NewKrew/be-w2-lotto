package view;

import domain.Lotto;
import domain.LottoResult;
import domain.MatchStatus;
import domain.Purchase;

import java.util.List;
import java.util.stream.Collectors;

public class LottoGuidePrinter {

    private LottoGuidePrinter() {}

    public static void requestPurchaseAmountInput() {
        System.out.println(MessageContent.PURCHASE_AMOUNT_REQUEST);
    }

    public static void alertPurchaseQuantity(Purchase purchase) {
        System.out.printf(MessageContent.PURCHASE_QUANTITY, purchase.getManualGeneratedLottoQuantity(), purchase.getAutoGeneratedLottoQuantity());
    }

    public static void printLottoList(List<Lotto> lottoList) {
        for (Lotto lotto : lottoList) {
            printLotto(lotto);
        }
        System.out.println();
    }

    public static void printLotto(Lotto lotto) {
        System.out.println(lotto.getBalls().stream()
                .map(e -> String.valueOf(e.getNumber()))
                .collect(Collectors.joining(MessageContent.COMMA, MessageContent.OPEN_BRACKET, MessageContent.CLOSING_BRACKET))
        );
    }

    public static void requestLottoNumberInput() {
        System.out.println(MessageContent.WINNING_LOTTO_REQUEST);
    }

    public static void printLottoResult(int purchaseAmount, LottoResult lottoResult) {
        System.out.println(MessageContent.WINNING_STATISTICS);
        for (var e: MatchStatus.values()) {
            printResultOfMatchStatus(e, lottoResult);
        }
        System.out.printf(MessageContent.TOTAL_RETURN, ((lottoResult.getTotalPrizeMoney() - purchaseAmount) / ((double) purchaseAmount)) * 100);
    }

    private static void printResultOfMatchStatus(MatchStatus status, LottoResult lottoResult) {
        if (status.equals(MatchStatus.NOTHING) || status.equals(MatchStatus.INVALID)) {
            return;
        }
        System.out.printf(MessageContent.MATCH_COUNT, status.getMatchCount());
        if (status.isBonusMatched()) {
            System.out.print(MessageContent.IS_BONUS_MATCHED);
        }
        System.out.printf(MessageContent.PRIZE_MONEY_AND_COUNT, status.getPrizeMoney(), lottoResult.getCountByMatchResult(status));
    }

    public static void requestBonusBallInput() {
        System.out.println(MessageContent.BONUS_BALL_REQUEST);
    }

    public static void requestManualPurchaseQuantity() {
        System.out.println(MessageContent.MANUAL_PURCHASE_QUANTITY_REQUEST);
    }

    public static void requestManualPurchaseLottoList() {
        System.out.println(MessageContent.MANUAL_PURCHASE_LOTTO_LIST_REQUEST);
    }
}
